stages:
  - build 
  - test 
  - end 

test_and_build:
  tags: 
    - gitlab-org-docker
  stage: build
  image: docker:latest
  services:
    - name: docker:dind
      alias: app
  before_script:
    - docker network create mynetwork
    - docker run -d -i -t --network=mynetwork --name NPM node:latest
    - docker exec -i  ls
    - docker exec -i  pwd
    - docker ps 
    - docker network connect mynetwork NPM
    - docker network inspect mynetwork
  script:
    - docker run -d -i -t --network=mynetwork --name OWASPZAP -v $(pwd):/zap/wrk/:rw owasp/zap2docker-stable
    - docker ps
    - docker cp npm-web-app.yaml OWASPZAP:/zap/npm-web-app.yaml 
    - docker exec -i OWASPZAP zap.sh -cmd -autorun /zap/npm-web-app.yaml
    #- docker exec -i OWASPZAP zap-baseline.py -t http://app-web-1:4000 -r  baseline-report.html
    - docker exec OWASPZAP sh -c ls
    - docker exec -i OWASPZAP pwd
    - docker cp OWASPZAP:/zap/ZAP_REPORT.html .
    - docker cp OWASPZAP:/zap/ZAP_ALERT_REPORT.md .
  after_script:
    - docker ps
    - docker exec OWASPZAP sh -c ls
    - docker exec -i OWASPZAP pwd
    - docker-compose down
  artifacts:
    paths:
      - ZAP_REPORT.html
      - ZAP_ALERT_REPORT.md


build:
  tags: 
    - gitlab-org-docker
  stage: build
  image: node:latest
  script:
    - npm install
    - npm start &

test:
  stage: test
  image:
    name: owasp/zap2docker-stable:latest
    entrypoint: [""]
  variables:
    CI_PROJECT_DIR: path_to_project_dir
    ZAP_ALERT_REPORT: alert-report
    ZAP_REPORT: baselinescan
  script:
    - ls
    - pwd
    - /zap/zap.sh -cmd -autorun /builds/filip.st1357/juice-shop_NPM/npm-web-app.yaml
  only:
    refs:
    - branches
  artifacts:
    when: always
    expire_in: 1 week
    paths:
      - ${CI_PROJECT_DIR}/${ZAP_REPORT}.html
      - ${CI_PROJECT_DIR}/${ZAP_ALERT_REPORT}.md
